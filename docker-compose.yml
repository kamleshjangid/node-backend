version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: bakery-web:${TAG:-latest}
    container_name: bakery_web
    ports:
      - "${PORT:-7002}:${PORT:-7002}"
    environment:
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      DATABASE_NAME: ${DATABASE_NAME}
      ALLOW_ORIGIN: ${ALLOW_ORIGIN}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      HOST: db
      DB_PORT: ${DB_PORT}
    depends_on:
      - db
    networks:
      - bakery-network

  db:
    image: postgres:latest
    container_name: bakery_db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - bakery-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: bakery_pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - db
    networks:
      - bakery-network

  trivy:
    image: aquasec/trivy:latest
    container_name: bakery_trivy_scan
    command: >
      image --exit-code 0 --no-progress --severity HIGH,CRITICAL bakery-web:${TAG:-latest}
    depends_on:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TRIVY_DISABLE_VEX_NOTICE: "true"
    networks:
      - bakery-network

  prometheus:
    image: prom/prometheus:latest
    container_name: bakery_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - bakery-network
    depends_on:
      - web

  grafana:
    image: grafana/grafana:latest
    container_name: bakery_grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - bakery-network
    depends_on:
      - prometheus

  sonarqube:
    image: sonarqube:lts-community
    container_name: bakery_sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - bakery-network

volumes:
  db_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  bakery-network:
    driver: bridge
