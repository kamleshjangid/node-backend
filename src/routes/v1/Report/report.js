const express =  require('express');
const router  =  express.Router();
const reportController = require('@controller/v1/report/reportController');
const { PLATFORM } = require('@constants/authConstant');
const auth = require('@middleware/auth');
router.route('/get-driver-report').post(auth(PLATFORM.ADMIN),reportController.getDriverReport);
router.route('/get-packing-slip-report').post(auth(PLATFORM.ADMIN),reportController.getPackingSlipReport);
router.route('/get-matrix-report').post(auth(PLATFORM.ADMIN),reportController.getMatrixReport);
router.route('/get-customer-total-order').post(auth(PLATFORM.ADMIN),reportController.customerTotalOrderReport); 
router.route('/get-all-customer-total-order').post(auth(PLATFORM.ADMIN),reportController.allCustomerTotalOrderReport); 
router.route('/get-published-invoice-report').post(auth(PLATFORM.ADMIN),reportController.getPublishedInvoice);
router.route('/get-customer-invoice-report').post(auth(PLATFORM.ADMIN),reportController.getCustomerInvoice);
router.route('/get-customer-invoice-pdf').post(auth(PLATFORM.ADMIN),reportController.getCustomerInvoicePdf);
router.route('/get-all-customer-invoice-pdf').post(auth(PLATFORM.ADMIN),reportController.getAllCustomerInvoicePdf);
router.route('/get-published-invoice-excel').post(auth(PLATFORM.ADMIN),reportController.getPublishedInvoiceExcel);
router.route('/get-published-accounting-excel').post(auth(PLATFORM.ADMIN),reportController.getPublishedAccountingExcel);
router.route('/get-unprocessed-invoice-list').post(auth(PLATFORM.ADMIN),reportController.getUnprocessedInvoiceList);
router.route('/get-unprocessed-total-invoice').post(auth(PLATFORM.ADMIN),reportController.getUnprocessedTotalInvoice);
router.route('/submit-published-customer').put(auth(PLATFORM.ADMIN),reportController.submitPublishedCustomer);
router.route('/get-order-by-customer').post(auth(PLATFORM.ADMIN),reportController.getOrderByCustomer);
// router.route('/get-invoice-report-by-route').post(auth(PLATFORM.ADMIN),reportController.getInvoiceReportByRoute);
module.exports = router;
